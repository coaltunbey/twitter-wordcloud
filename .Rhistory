boxplot(gunluk$Cost)
View(optimizedValues)
clear()
clear
cat("\f")
boxplot(gunluk$Cost)
View(optimizedValues)
weightedCosts <- ggplot(data = camp) +
geom_point(aes(x = Impressions, y = Clicks, size=Cost, colour=Cluster)) +
geom_line(aes(x = Impressions, y = Impressions * (sum(Clicks) / sum(Impressions)))) +
geom_text(aes(label=ifelse(Cost>40 ,as.character(Campaign),''), x = Impressions, y = Clicks), size=3)
weightedCosts + scale_color_brewer(palette="Dark2") + theme_minimal()
camp[, CampaignType := str_sub(Campaign, 0, 3)]
camp[, CampaignType := substr(Campaign, 0, 3)]
View(camp)
weightedCosts <- ggplot(data = camp) +
geom_point(aes(x = Impressions, y = Clicks, size=Cost, shape=CampaignType, colour=Cluster)) +
geom_line(aes(x = Impressions, y = Impressions * (sum(Clicks) / sum(Impressions)))) +
geom_text(aes(label=ifelse(Cost>40 ,as.character(Campaign),''), x = Impressions, y = Clicks), size=3)
weightedCosts + scale_color_brewer(palette="Dark2") + theme_minimal()
weightedCosts <- ggplot(data = camp) +
geom_point(aes(x = Impressions, y = Clicks, size=Cost, shape=CampaignType, colour=Cluster)) +
geom_line(aes(x = Impressions, y = Impressions * (sum(Clicks) / sum(Impressions))))
weightedCosts + scale_color_brewer(palette="Dark2") + theme_minimal()
examineLogistic <- function(maxInput = 3.5, minInput = 1, upper = 0.9, steepness = 0.7){
x <- c(10:60/10)
data <- data.table(x = x, logistic = round(getLogisticValue(x, maxInput, minInput, upper, steepness),2))
plot(data$x, data$logistic)
return(data)
}
examineLogistic()
library(data.table)
examineLogistic()
install.packages('swirl')
library(swirl)
install_course("R Programming")
swirl()
swirl()
5+7
x <- 5 + 7
x
y = x-3
y = x - 3
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
<
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
(z * 2 + 100)
(z * 2 + 1000)
(z * 2 + 1000)
z * 2 + 100
z * 2 + 1000
my_div
getWd()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
ls
dir()
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
args(file.rename)
file.rename("mytest.R", "mytest2.R")
args(file.copy)
file.copy("mytest2.R", "mytest3.R")
args(file.path)
file.path("mytest3.R")
qw
?file.path
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2",)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
`:`
?`:`
seq(1, 20)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10,
| length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
getwd()
ls()
dir()
?dir.remove
unlink("testdir", recursive = TRUE)
dir()
?version
R.version()
R.Version()
R.Version()$version.string
R.Version()$version.string
library(data.table)
install.packages(
lib  = lib <- .libPaths()[1],
pkgs = as.data.frame(installed.packages(lib), stringsAsFactors=FALSE)$Package,
type = 'source'
)
library(data.table)
library(swirl)
bye()
update.packages()
update.packages(checkBuilt=TRUE, ask=FALSE)
library(swirl)
swirl()
num_vect(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
a <- num_vect >= 6
num_vect >= 6
c('My', 'name', 'is')
my_char <- c('My', 'name', 'is')
my_char
paste(my_char, collapse = " ")
c(my_char, 'Cem')
my_name <- c(my_char, 'Cem')
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
c("X", "Y", "Z", sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == Na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x <- rnorm(20)
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo","bar", "norf")
identical(vect, vect2)
vect['bar']
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:10, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <-
| data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6< 7
10 <= 10
5 != 7
5 != 7
5 == 7
!(5==7)
FALSE & FALSE
TRUE
| & c(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
bye()
swirl()
info()
main()
infO()
infO()
main
main()
info()
skip()
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints)
any(ints < 0)
all ( ints)
all ( ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
info()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Regression Models")
install_course("Getting and Cleaning Data")
install_course("Statistical Inference")
swirl()
library(swirl)
swirl()
ls(plants)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
_sample
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(0:1, 100, REP = TRUE)
sample(0:1, 100, replace = TRUE)
sample(c(0,1), 100, replace = TRUE, prob(c(0.3, 0.7)))
sample(c(0,1), 100, replace = TRUE, prob = (c(0.3, 0.7)))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips))
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(c(0,1), size=100, prob=0.7)
flips2 <- rbinom(n=100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sf=25)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, mena=10)
rpois(5, meaa=10)
rpois(5, mean=10)
rpois(5)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
library(swirl)
swirl()
1
info()
1-3/36
deck
52
4/52
0
12/52
11/52*2/12
2/12
2/52
12/52*2/12
?
help()
exit
eix
quit
swirl()
library(swirl)
swirl()
skip()
deck
52
4/52
0
12/52
skip()
swirl()
bye()
qweqw
asdsda
getwd();
getwd()
args(file.path)
args(file.path())
args(file.path
args(file.path)
args(file.path)
file.path(getwd())
file.path("adpro")
setwd(paste(getwd(), '/twitter-wordcloud'))
paste(getwd(), '/twitter-wordcloud')
paste(getwd(), '/twitter-wordcloud', sep='')
setwd(paste(getwd(), '/twitter-wordcloud', sep=''))
getwd()
library(RColorBrewer)
library(wordcloud)
install.packages("wordcloud")
library(wordcloud)
library(tm)
install.packages("")
install.packages("tm")
library(tm)
install.packages("twitteR")
install.packages("ROAuth")
library(plyr)
library(stringr)
library(base64enc)
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
library(twitteR)
library(ROAuth)
library(plyr)
library(stringr)
library(base64enc)
library(wordcloud)
library(tm)
library(RColorBrewer)
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
setup_twitter_oauth('0daiCx9rj6ZYQfvN5bqV7IGjA',
'JzbGU9mTSNyjzzpzGQ6mtChlab56hj1SPSOSq4p6sAUPJ8oZ33',
'877993522347069440-UVcBDk1AUAes1r7CDq6N3MORxQRUcTZ',
'3g10Zx9Yh8UIgXllYkH2zN61mciWkh5UFFTGnbk43YNfs')
?searchTwitter
searchString <- "ErdoÄŸan"
numberOfTweets <- 1
Objectname <- searchTwitter(searchString, n=numberOfTweets)
remove(Objectname)
foundTweets <- searchTwitter(searchString, n=numberOfTweets)
foundTweets <- searchTwitter(searchString, n=numberOfTweets)
numberOfTweets <- 1000
foundTweets <- searchTwitter(searchString, n=numberOfTweets)
foundTweets
searchString <- "Google"
numberOfTweets <- 60
foundTweets <- searchTwitter(searchString, n=numberOfTweets)
foundTweets
foundTweets <- searchTwitter(searchString, n=numberOfTweets, resultType="popular")
foundTweets
foundTweets <- searchTwitter(searchString, n=numberOfTweets, lang="eng" resultType="popular")
foundTweets <- searchTwitter(searchString, n=numberOfTweets, lang="English" resultType="popular")
foundTweets <- searchTwitter(searchString, n=numberOfTweets, lang="English", resultType="popular")
foundTweets <- searchTwitter(searchString, n=numberOfTweets, lang="eng", resultType="popular")
foundTweets <- searchTwitter(searchString, n=numberOfTweets, lang="en", resultType="popular")
foundTweets
tweet <- userTimeline('@BarackObama', n=100)
tweet
install.packages('SnowballC')
library(SnowballC)
?sapply
obamasTweets <- userTimeline('@BarackObama', n=100)
obamasTweets[22]
obamasTweets[22]$getText()
oTweets <- userTimeline('@BarackObama', n=100)
oTweetsText <- sapply(oTweets, function(x) x$getText())
oTweetsText
class(oTweets)
class(oTweetsText)
oTweetsTextCorpus <- Corpus(VectorSource(oTweetsText))
class(oTweetsTextCorpus)
oTweetsTextCorpus <- tm_map(oTweetsTextCorpus, removePunctuation)
oTweetsTextCorpus <- tm_map(oTweetsTextCorpus, content_transformer(tolower))
oTweetsTextCorpus <- tm_map(oTweetsTextCorpus, function(x)removeWords(x,stopwords()))
?getTransformations
removeURL <- function(x) gsub('http[[:alnum:]]*', '', x)
oTweetsTextCorpus <- tm_map(oTweetsTextCorpus, content_transformer(removeURL))
oTweetsTextCorpus
oTweetsMx <- TermDocumentMatrix(oTweetsTextCorpus)
oTweetsMx <- as.matrix(oTweetsMx)
oTweetsMx <- sort(rowSums(oTweetsMx),decreasing=TRUE)
oTweetsMx <- data.frame(word = names(oTweetsMx), freq=oTweetsMx)
head(oTweetsMx)
barplot(oTweetsMx[1:10,]$freq, las = 2, names.arg = oTweetsMx[1:10,]$word,
col ='yellow', main ='Most frequent words',
ylab = 'Word frequencies')
set.seed(1234)
wordcloud(oTweetsTextCorpus, min.freq=1, max.words=80, scale=c(2.2,1),
colors=brewer.pal(8, 'Dark2'), random.color=T, random.order=F)
?library
ListOfLibraries <- c('RColorBrewer', 'wordcloud', 'tm', 'twitteR', 'ROAuth',
'plyr', 'stringr',
'base64enc')
